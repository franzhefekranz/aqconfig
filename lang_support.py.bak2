#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.5
#  in conjunction with Tcl version 8.6
#    Nov 03, 2020 05:11:06 PM CET  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
import os
import configparser
import gettext
_ = gettext.gettext

def set_Tk_var():
    global strCboLanguage
    strCboLanguage = tk.StringVar()

def fill_combo():
    languages =['English', 'Deutsch', 'Francais']
    for lang in languages:
        # fill the trigger combobox
        w.cboLanguage['values'] = (*w.cboLanguage['values'], lang)
    global strCboLanguage
    strCboLanguage.set('English')

def set_value_config_file(file_path, section, key, value):
    config = configparser.RawConfigParser()
    config.read(file_path)
    config.set(section,key,value)                         
    cfgfile = open(file_path,'w')
    config.write(cfgfile, space_around_delimiters=False)  # use flag in case case you need to avoid white space.
    cfgfile.close()        
    
def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top
    root.iconbitmap('./assets/aqconfig.ico')

    fill_combo()

def btnCancel_LeftRelease(p1):
    destroy_window()

def btnOk_LeftRelease(p1):
    global strCboLanguage
    languages =['English', 'Deutsch', 'Francais']
    lang = ['en', 'de', 'fr']
    #save to aqconfig.ini
    fName = os.getcwd() + '\\config.ini'
    language = strCboLanguage.get()
    i=0
    for language in languages:
        if language == strCboLanguage.get():
            lng = lang[i]
        i += 1
    set_value_config_file(fName, 'aqconfig', 'language',lng)
    destroy_window()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import lang
    lang.vp_start_gui()




