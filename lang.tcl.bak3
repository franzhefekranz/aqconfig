#############################################################################
# Generated by PAGE version 5.5
#  in conjunction with Tcl version 8.6
#  Nov 04, 2020 12:12:56 PM CET  platform: Windows NT
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    tk_messageBox -title Error -message  "You must open project files from within PAGE."
    exit}


if {!$vTcl(borrow) && !$vTcl(template)} {

set vTcl(actual_gui_font_dft_desc)  TkDefaultFont
set vTcl(actual_gui_font_dft_name)  TkDefaultFont
set vTcl(actual_gui_font_text_desc)  TkTextFont
set vTcl(actual_gui_font_text_name)  TkTextFont
set vTcl(actual_gui_font_fixed_desc)  TkFixedFont
set vTcl(actual_gui_font_fixed_name)  TkFixedFont
set vTcl(actual_gui_font_menu_desc)  TkMenuFont
set vTcl(actual_gui_font_menu_name)  TkMenuFont
set vTcl(actual_gui_font_tooltip_desc)  TkDefaultFont
set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 0
set vTcl(mode) Absolute
}




proc vTclWindow.top45 {base} {
    global vTcl
    if {$base == ""} {
        set base .top45
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background $vTcl(actual_gui_bg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 250x220+660+210
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1061
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "Settings"
    vTcl:DefineAlias "$top" "frmGetLang" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    vTcl:withBusyCursor {
    ttk::style configure TButton -background $vTcl(actual_gui_bg)
    ttk::style configure TButton -foreground $vTcl(actual_gui_fg)
    ttk::style configure TButton -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::button $top.tBu47 \
        -takefocus {} -text Ok 
    vTcl:DefineAlias "$top.tBu47" "btnOk" vTcl:WidgetProc "frmGetLang" 1
    bind $top.tBu47 <ButtonRelease-1> {
        lambda e: btnOk_LeftRelease(e)
    }
    ttk::style configure TButton -background $vTcl(actual_gui_bg)
    ttk::style configure TButton -foreground $vTcl(actual_gui_fg)
    ttk::style configure TButton -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::button $top.tBu48 \
        -takefocus {} -text Cancel 
    vTcl:DefineAlias "$top.tBu48" "btnCancel" vTcl:WidgetProc "frmGetLang" 1
    bind $top.tBu48 <ButtonRelease-1> {
        lambda e: btnCancel_LeftRelease(e)
    }
    ttk::style configure TLabelframe.Label -background $vTcl(actual_gui_bg)
    ttk::style configure TLabelframe.Label -foreground $vTcl(actual_gui_fg)
    ttk::style configure TLabelframe.Label -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::style configure TLabelframe -background $vTcl(actual_gui_bg)
    ttk::labelframe $top.tLa44 \
        -text Language -borderwidth 2 -relief groove -width 150 -height 75 
    vTcl:DefineAlias "$top.tLa44" "fraSelLanguage" vTcl:WidgetProc "frmGetLang" 1
    set site_3_0 $top.tLa44
    ttk::label $site_3_0.tLa45 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font TkDefaultFont -relief flat -anchor w -justify left \
        -text {Select language from below:} 
    vTcl:DefineAlias "$site_3_0.tLa45" "lblSelLanguage" vTcl:WidgetProc "frmGetLang" 1
    ttk::combobox $site_3_0.tCo46 \
        -font TkTextFont -textvariable strCboLanguage -foreground {} \
        -background {} -takefocus {} 
    vTcl:DefineAlias "$site_3_0.tCo46" "cboLanguage" vTcl:WidgetProc "frmGetLang" 1
    place $site_3_0.tLa45 \
        -in $site_3_0 -x 30 -y 30 -width 200 -relwidth 0 -height 19 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $site_3_0.tCo46 \
        -in $site_3_0 -x 30 -y 60 -width 160 -relwidth 0 -height 25 \
        -relheight 0 -anchor nw -bordermode ignore 
    ttk::style configure TButton -background $vTcl(actual_gui_bg)
    ttk::style configure TButton -foreground $vTcl(actual_gui_fg)
    ttk::style configure TButton -font "$vTcl(actual_gui_font_dft_desc)"
    ttk::button $top.tBu49 \
        -takefocus {} -text {Path to Aqserver.exe} 
    vTcl:DefineAlias "$top.tBu49" "btnPathToExe" vTcl:WidgetProc "frmGetLang" 1
    ttk::label $top.tLa50 \
        -background $vTcl(actual_gui_bg) -foreground $vTcl(actual_gui_fg) \
        -font TkDefaultFont -relief sunken -anchor w -justify left 
    vTcl:DefineAlias "$top.tLa50" "TLabel1" vTcl:WidgetProc "frmGetLang" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tBu47 \
        -in $top -x 30 -y 180 -width 75 -relwidth 0 -height 25 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tBu48 \
        -in $top -x 110 -y 180 -width 75 -relwidth 0 -height 25 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tLa44 \
        -in $top -x 30 -y 80 -width 260 -relwidth 0 -height 100 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tBu49 \
        -in $top -x 30 -y 10 -width 118 -relwidth 0 -height 25 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tLa50 \
        -in $top -x 30 -y 40 -width 200 -relwidth 0 -height 25 -relheight 0 \
        -anchor nw -bordermode ignore 
    } ;# end vTcl:withBusyCursor 

    vTcl:FireEvent $base <<Ready>>
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top45 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

