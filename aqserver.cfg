###############################################################################
# config file for data acquisition server for S7-400 PLC
###############################################################################
# 
# "#" at 1st column of line will be a comment, use it to disable settings. Note
# that always one valid setting must be available
#
# Use ";" for inline comments
#
# If you want to have some text in more than one line, following lines must
# be indented with TAB, see remarks in aqdata settings
#


###############################################################################
# aqdata settings
###############################################################################
[aqdata]
place = somewhere
creator = Franz Hefekranz
machine = mean machine
order = just do it or number 1234
remarks = ; use tab for multiline values
    mean machine 
    investigating malfunction
    production babysitting

###############################################################################
# communication settings
# setting up communication parameters to S7-PLC
###############################################################################
[communication]

# demo switch
# if 1 communication will be ignored and values will be randomly created
demo = 1

# ip address
# you can keep addresses from other project, but have to comment them...
# ip = 192.168.1.107 ; Test PC with PLCSIM and nettoplcsim
ip = 192.168.1.47 ; Test w. Linux and resourceless Snap7-server

# rack number, see HW Config
rack = 0 ; 

# slot number of CPU, see HW Config
# you can keep slot number from other project, but have to comment them...
# slot = 4 ; #######
# slot = 3 ; ######
# slot = 3 ; #####
slot = 2 ; plcsim

# maximum attempts for connection, 0 is trying forever
maxattempts = 10

###############################################################################
# miscellaneous settings
###############################################################################
[misc]
# miscellaneous values for setting up the acquisition server

# value delimiter in storage file
delimiter = ;

# prefix of data file name, e.g. a customer/project name or whatever
datafileprefix = testplcsim

# data file name for actual data recording, without extension!
# e.g. if you use "filename", actual name will be "filename.csv"
datafile = testplcsim

# autostart: when program is started decide whether acquisition is started(1)
# immediately or wait for start signal (0)
autostart = 1

#path for data files, use "\" for directory separation, with "\" at the end !
# e.g. datapath = D:\mydata\2015\08\03\
datapath = D:\hzmmic02\Documents\Aqserver\archive\

# if 1 use directory structure datapath\yyyyy\MM\dd otherwise use only datapath
usedir = 1

# scantime in milliseconds [ms]
scantime = 0 

# maximum number of records
maxrecords = 10000

###############################################################################
# 
# 
# ATTENTION: value boolsoffset has been replaced by gain/offset/unit in value settings
#            Do not enable anymore (though it doesn't hurt...)
# switch for offset of boolean values
# if 1 then boolean values in a byte (see values settings) will be offset by 2 as follows:
#
# value + bit number * 2
#
#  bit | true | false
#  ----+------+-------
#   0  |  1   +  0
#  ----+------+-------
#   1  |  3   +  2
#  ----+------+-------
#   2  |  5   +  4
#  ----+------+-------
#   3  |  7   +  6
#  ----+------+-------
#   4  |  9   +  8
#  ----+------+-------
#   5  | 11   + 10
#  ----+------+-------
#   6  | 13   + 12
#  ----+------+-------
#   7  | 15   + 14
# if booloffset is 0 then only the boolean value (1 for true, 0 for false) will be stored
# booloffset = 0
###############################################################################

###############################################################################
# trigger settings
###############################################################################
#
# when trigger condition is matched, then we close the old file after post-trigger
# time and start the new file and copy pre-trigger and post-trigger time 
# recordings to new file
#
# condition is, with example:
#   trgsignal                trgcondition      trgvalue
#   rewind diameter [mm]     =                 0
#
[trigger]

# trigger signal, copy the name of the signal in [values]  section, 
# that you want to use as trigger signal.
# if you don't want to use a trigger, set 0 (remove comment in next line) 
trgsignal = 0
# comment out next line, if you enable trgsignal = 0
# trgsignal = test1

# trigger condition, use >,>=,==, <=,<,!= as condition
# if conditon is matched, then we close the old file and start a new one
# trgcondition = >
# trgcondition = >=
# trgcondition = ==
# trgcondition = <=
# trgcondition = <
trgcondition = !=

# trigger value, with this value we compare the trigger signal
trgvalue = 0

# pre-trigger time in seconds [s]
# will still add pre-trigger/scantime lines to old file after trigger event
# e.g. pre-trigger is 60 seconds and scantime is 100 ms, then 600 lines will be recorded
# after trigger event
pretrg = 30

#post-trigger time in seconds [s]
# will copy last post-trigger/scantime lines from old to new file
# e.g. post-trigger is 60 seconds and scantime is 100 ms, then 600 lines will be copied
# after trigger event
posttrg = 30


###############################################################################
# debug settings
###############################################################################
[debug]

# debug level
# set logging level to debug, write program actions
# to logfile
# 0 - no logging
# 1 - log INFO messages (default setting)
# 2 - log WARNING messages
# 3 - log DEBUG messages
# 4 - log ERROR messages
# 5 - log CRITICAL messages
# 6 - log EXCEPTION messages
dbglevel = 1

# name of logfile, without extension. Extension will be added as ".log"
logfile = aqserver

# add timestamp to logfile name 1 = yes, 0 = no
# if set to 1 a timestamp will be added to the lofile name. pls. note that a 
# new logfile will be created, every time you start the server, 
# when dbglevel is > 0
logts = 1

###############################################################################
# value settings, here we define the S7 variables we want to read,
# and their formats !
###############################################################################
[values]
# here we define the S7 variables that we want to observe
# use following syntax:
#
######### how to define the names: ############################################
# use config value name with [] - brackets to define the unit of the value
# 
# boolean values:
# For boolean values (see format X above) a complete byte is read and then split into 8 bits 
# To define names for the single bits use ',' to separate the names, e.g.:
#
#    bit0,bit1,bit2,bit3,bit4,bit5,bit6,bit7 = DB1234.DX5
#    Klemmventil UM1,Klemmventil UM2,Klemmventil UM3,Klemmventil UM4,Reserve,Reserve,Reserve,Reserve = DB1234.DX5
#
# If you do not want all the bits, leave the name empty e.g.:
#
#    bit0,,bit2,,,,, = DB1234.DX5
#
# This reads only bit0  and bit2
#
#
######### how to define the values: ############################################
# (S7 variable and format)
#    DBn.AFn.x
#                
#                where 
#                - DB is for data blocks or omitted if other area
#                - n is DB number or omitted if other area
#                - . only when data, omitted otherwise
#                - A is area
#                    - D for data 
#                    - M or F for flags
#                    - E or I for inputs
#                    - A or Q for outputs
#                    - T for timers
#                    - Z or C for counters
#                - F is format 
#                    - X - for BYTE in BOOL format, followed by byte address:
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                          will always be split in 8 single booleans
#                    - B - for BYTE in int format, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - W - for WORD, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - D - for DOUBLE WORD, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#                    - F - for DOUBLE WORD in REAL format, followed by byte address
#                        - n is whole number for byte address
#                          (attention to address ranges of PLC)
#
#
###############################################################################

###### how to define gain, offset and unit ####################################
# after the S7 variable we must define a gain, an offset and the unit for 
# this value. To do so, we add a comma ',' (without colons) after the S7 variable.
# Thereafter we give a value for the gain the value is multiplied with. If you
# want just the original value, set the gain to 1 (which is the default).
# Then put another comma followed by the offset. The offset is added to the product
# of value and gain. After another value we put a string for the unit. Don't use
# brackets or parentheses as this can cause problems later in KST2.
# Here an example for a value definition:
#
# torque Motor 1 = DB4147.DD1248,1,0,Nm
# --------------   ------------- - - --
# |                |             | | |
# |                |             | | +-unit
# |                |             | +-offset
# |                |             +-gain
# |                +-S7 variable
# + name

# For BOOL variables the settings for gain, offset and unit is a little bit tricky.
# We have to set gain and offset for 8 values in a row. 
#
# BUT THEY MUST BE SEPARATED WITH AN UNDERSCORE '_'
# 
# This means gain for boolean variables is something like: 
#
# 1_1_1_1_1_1_1_1  (when using default value 1)
#
# Set the next comma followed by the values for the offset, in the same manner:
#
# 0_0_0_0_0_0_0_0 (when using default value 0)
#
# Offsets will be added to the product of value and gain. If you want to keep the
# original value set all offsets to 0 (0 is the default for offsets). 
# Put another comma after the offsets. We omit the units which don't make sense
# for boolean values. Here an example for a boolean value definition:
#
#  A,B,C,D,E,F,G,H = AX9,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
#  - - - - - - - -   --- - - - - - - - - - - - - - - - -
#  | | | | | | | |   |   | | | | | | | | | | | | | | | |
#  | | | | | | | |   |   | | | | | | | | | | | | | | | +-8th offset
#  | | | | | | | |   |   | | | | | | | | | | | | | | +-7th offset
#  | | | | | | | |   |   | | | | | | | | | | | | | +-6th offset
#  | | | | | | | |   |   | | | | | | | | | | | | +-5th offset
#  | | | | | | | |   |   | | | | | | | | | | | +-4th offset
#  | | | | | | | |   |   | | | | | | | | | | +-3rd offset
#  | | | | | | | |   |   | | | | | | | | | +-2nd offset
#  | | | | | | | |   |   | | | | | | | | +-1st offset
#  | | | | | | | |   |   | | | | | | | |
#  | | | | | | | |   |   | | | | | | | +-8th gain
#  | | | | | | | |   |   | | | | | | +-7th gain
#  | | | | | | | |   |   | | | | | +-6th gain
#  | | | | | | | |   |   | | | | +-5th gain
#  | | | | | | | |   |   | | | +-4th gain
#  | | | | | | | |   |   | | +-3rd gain
#  | | | | | | | |   |   | +-2nd gain
#  | | | | | | | |   |   +-1st gain
#  | | | | | | | |   |
#  | | | | | | | |   +-S7 variable
#  | | | | | | | |              
#  | | | | | | | +-8th name
#  | | | | | | +-7th name
#  | | | | | +-6th name
#  | | | | +-5th name
#  | | | +-4th name
#  | | +-3rd name
#  | +-2nd name
#  +-1st name
#
# final value will be calculated as follows:
#
#     output = value * gain + offset
#
###############################################################################

len = MW4,1,0,m
74_YI_PV = DB4147.DD1248,0,646.6852,Angström/Woche
A9.0,A9.1,A9.2,A9.3,A9.4,A9.5,A9.6,A9.7 = AX9,1_1_1_1_1_1_1_1,14_29_36_45_69_77_82_93,
Q19.0,Q19.1,Q19.2,Q19.3,Q19.4,Q19.5,Q19.6,Q19.7 = QX19,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
I1.0,I1.1,I1.2,I1.3,I1.4,I1.5,I1.6,I1.7 = IX1,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
E3.0,E3.1,E3.2,E3.3,E3.4,E3.5,E3.6,E3.7 = EX3,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
F3.0,F3.1,F3.2,F3.3,F3.4,F3.5,F3.6,F3.7 = FX3,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
M5.0,M5.1,M5.2,M5.3,M5.4,M5.5,M5.6,M5.7 = MX5,1_1_1_1_1_1_1_1,0_0_0_0_0_0_0_0,
speed = DB63.DF42,1,0,m/min
DENSITY = DB3074.DF60,1,0,kg/m³
AB9 = AB9,4,0,
QB19 = QB19,1,0,s
IB1 = IB1,1,0,m
EB3 = EB3,1,0,kg
FB3 = FB3,1,0,m³
MB3 = MB3,1,0,m/min
